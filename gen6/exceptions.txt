EXCEPTION HANDLING
==================

try ... catch ... resume

try must establish an exception handler, which resume will remove again.


Exception raise (=new throw)




try     ·   •   •   •   •   •   •   •   •   •
        ·   •   •   •   •   •   •   •   •   •
        ·   •   •   ×   ×   ×   ×   ×   ×   ×
        ·   •   •   ·   ·   ·   ·   ·   ·   ·
catch   ·   ·   ·   +   +   +   +   +
        ·   ·   ·   •   •   •   •   •
        ·   ·   ·   •   •   *   *   *
        ·   ·   ·   •   •   ·   ·   ·
finally ·       •       •   +   +       +   +
        ·       •       •   •   •       •   •
        ·       •       •   •   *       •   ×
        ·       •       •   •   ·       •   ·
resume  ·   •   •   •   •   •   +   +   •   +
        ·   •   •   •   •   ×   ×   ×   •   ×

entry points:
> catch
    + for exceptions raised inside the try block
> finally
    + for exceptions raised in the catch block
    • for all code after regular try (try runs into finally code, if present)
    • for all code after regular catch (catch runs into finally code, if present)
> resume
    + for exceptions raised in the catch block (exception is not actually raised, but just registered in the current  handler)
    + for exceptions raised in the finally block (exception is not actually raised, but just registered in the current  handler)
    • for all code after regular try (try runs into resume code, unless it runs into finally code)
    • for all code after regular catch (catch runs into resume code, unless it runs into finally code)
    • for all code after regular finally (finally code runs into resume)

